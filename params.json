{"name":"Kanyecrud","tagline":"","body":"# KanyeCRUD app for Bowie Students\r\nHey Bowies. Here's an example app to hopefully make the whole world of Express, routes and CRUD a little easier to navigate. Note: I am using MongoDB as my database. Disregard if that will be confusing to you. This is more about the trouble with routes I've noticed.\r\n\r\n![kanye](https://cloud.githubusercontent.com/assets/14798929/13341435/ba9c6b32-dc06-11e5-929c-a023a473fc73.png)\r\n\r\nIn this app, I have 2 successful routes -- I know you can do the missing operations. Based on this, you should be able to:\r\n* Create an Express server\r\n* Execute CREATE operations\r\n* Execute READ operations\r\n* Save and read from MongoDB\r\n* Use template engine Embedded JavaSscript (EJS)\r\n\r\nAfter installation and usage instructions (if I get the chance, I will deploy it for you), look at the code, everything is commented for you.\r\n\r\n## Installation\r\n1. Clone repo\r\n2. Run `npm install`\r\n\r\n## Usage\r\n1. run `node server.js`\r\n2. Navigate to (localhost:3000)\r\n\r\n## CRUD, Express and MongoDB\r\n+ Express is a framework used on top of Node.js. Node allows you to use JS as your server-side language. Express makes creating a server easier.\r\n+ MongoDB is a database, where the info I'm putting into my app is stored.\r\n+ CRUD is Create, Read, Update and Delete. Each operation can be associated with a route:\r\n  * Create = Post = make something\r\n  * Read = Get = retrieve something\r\n  * Update = Put = change something\r\n  * Delete = Delete = destroy something\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}